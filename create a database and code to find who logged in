*********  create a database of users **************

 // GO TO FIREBASE CONSOLE --> DATABASE --> ADD NAME AND VALUES

 // CREATE A JSON STRUCTURE

{
  "shopowner": {                  // THIS IS OBTAINED FROM THE DATABASE WHICH WE AD CREATED IN THE FIREBASE CONSOLE

    "userid1": {
      "shopid1": "A",
      "shopid2": { "g": true },   // NO OF SHOP ID'S ARE CREATED TO AVOID NESTING OF DATA AS IT REQUIRES LARGE MEGABYTES.

    },
    "value": { ... }
    
  }
}  

 // As every user needs a unique Id, it can be  generated by calling push() method which creates an empty node with unique key. Then get the reference to ‘user’ node using child() method. Finally use setValue() method to store the user data.

DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference("user");
 
// Creating new user node, which returns the unique key value
// new user node would be /users/$userid/

String userId = mDatabase.push().getKey();
 
// creating user object

User user = new User("Harika jetti", "chinnari15.jetti@gmail.com");
 
// pushing user to 'users' node using the userId

mDatabase.child(userId).setValue(user);

// To read or write data from the database, you need an instance of DatabaseReference:

private DatabaseReference mDatabase;

mDatabase = FirebaseDatabase.getInstance().getReference();

// BY RUNNING THE ABOVE CODE

{
  "user": [
    "-KTYWvZG4Qn9ZYTc4280" : {
      "email" : "chinnari15.jetti@gmail.com",
      "name" : "Harika jetti"
    },
    {
      ...
    }
  ]
}


*************** GET THE CURRENTLY SIGNED-IN USER FROM FIREBASE ******************************
 // to get the current user is done by setting a listener on the FirebaseAuth object:

mAuthListener = new FirebaseAuth.AuthStateListener() {
    @Override
    public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
        FirebaseUser user = firebaseAuth.getCurrentUser();
        if (user != null) {
            // User is signed in
            Log.d(TAG, "onAuthStateChanged:signed_in:" + user.getUid());
        } else {
            // User is signed out
            Log.d(TAG, "onAuthStateChanged:signed_out");
        }
        // ...
    }
};

//Attach the listener when your Activity starts and detach when it stops:

@Override
public void onStart() {
    super.onStart();
    mAuth.addAuthStateListener(mAuthListener);
}

@Override
public void onStop() {
    super.onStop();
    if (mAuthListener != null) {
        mAuth.removeAuthStateListener(mAuthListener);
    }
}

// You can also get the currently signed-in user by calling getCurrentUser. If a user isn't signed in, getCurrentUser returns null:

FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
if (user != null) {
    // User is signed in
} else {
    // No user is signed in
}

********************************************************************

FROM THE ABOVE CODE WE GET THE USERID WHEN THE USER SIGNS IN

THE USERID IS COMPARED WITH THE ID'S IN THE DATABASE OF THE FIREBASE CONSOLE

WHEN THE ID IS MATCHED IT SAYS THAT SHOPOWNER HAS LOGGED IN

{
  "shopowner": {                  // this is obtained from the database which we ad created in the firebase console
    "userid1": {
      "shopid1": "A",
      "shopid2": { "g": true },   // no of shop id's are created to avoid nesting of data as it requires large megabytes.
    },
    "value": { ... }
    
  }
}  

THE USERID1 IS THE ID OF THE REGISTERED SHOP OWNER WHICH WE HAD ENTERED INTO THE DATABASE THROUGH THE FIREBASE CONSOLE.
